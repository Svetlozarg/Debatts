import Head from 'next/head';
import { useEffect, useState } from 'react';
import Card from '../components/containers/Card';
import { useAuth } from '../context/AuthContext';
import { useRouter } from 'next/router';
import { collection, getDocs, doc, getDoc } from 'firebase/firestore';
import { db } from '../config/firebase';
import loadCustomRoutes from 'next/dist/lib/load-custom-routes';
import { checkApproved } from '../utils/checkApproved';
import { checkBanned } from '../utils/checkBanned';

export default function Home() {
  // User obj
  const { user, logout } = useAuth();
  // Router
  const router = useRouter();
  // State to store debatts
  const [debatts, setDebatts] = useState([]);
  const [getDebattsIDs, setDebattsIDs] = useState([]);
  const [numberPosts, setNumberPosts] = useState(23);
  const [loading, setLoading] = useState(true);

  // Fetch Debatts
  const fetchDebatts = async () => {
    // Chech if Approved
    if ((await checkApproved(user)) === false) {
      alert(
        'You are not approved. Please wait for an admin to go through your request and approve your profile. Thank you for your patience!'
      );
      logout();
      location.reload();
      return;
      // Check if banned
    } else if ((await checkBanned(user)) === true) {
      alert('You are banned');
      logout();
      location.reload();
      return;
    } else {
      const querySnapshot = await getDocs(collection(db, 'Debatts'));
      const debattsArr = [];
      const debattsIDs = [];
      querySnapshot.forEach((doc) => {
        debattsArr.push(doc.data());
        debattsIDs.push(doc.id);
      });
      debattsArr.sort((a, b) => {
        var dateA = new Date(a.createdAt);
        var dateB = new Date(b.createdAt);

        return dateA < dateB ? 1 : -1;
      });

      setDebattsIDs(debattsIDs);
      setDebatts(debattsArr);

      setTimeout(() => {
        setLoading(false);
      }, 100);
    }
  };

  // Handle Load More Posts
  const loadMorePosts = () => {
    setNumberPosts((prevValue) => prevValue + 10);
  };

  useEffect(() => {
    fetchDebatts();
  }, []);

  return (
    <div>
      <Head>
        <title>Debatts</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      {loading && <div className='spinner'></div>}

      {/* Home */}
      <main>
        {!loading &&
          debatts.slice(0, numberPosts).map((e, i) => {
            return (
              <Card
                key={i}
                title={e.title}
                body={e.body}
                id={e.id}
                wide={i == 0}
                author={e.author}
                createdAt={e.createdAt}
              />
            );
          })}
      </main>
      {/* Load More Posts Button */}
      {!loading && debatts.length > 23 && debatts.length >= numberPosts && (
        <div className='flex justify-center align-center mb-6'>
          <button
            className='transition ease-in-out duration-250 bg-transparent hover:bg-blue-700 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-700 hover:border-transparent rounded'
            onClick={loadMorePosts}
          >
            Load More
          </button>
        </div>
      )}
    </div>
  );
}
